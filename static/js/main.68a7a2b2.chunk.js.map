{"version":3,"sources":["components/TodoApp.js","App.js","index.js"],"names":["TodoApp","props","handleChange","event","setState","textContent","target","value","addItem","preventDefault","currenttext","state","currentitems","listItems","alert","checkEdit","map","elm","key","IsEditItem","push","editItem","itm","removeItem","arrayitems","splice","className","onSubmit","this","type","placeholder","onChange","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA+FeA,E,kDA7Ff,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVC,YAAcF,EAAMG,OAAOC,SAXhB,EAcnBC,QAAU,SAACL,GACPA,EAAMM,iBACN,IAAIC,EAAc,EAAKC,MAAMN,YACzBO,EAAe,EAAKD,MAAME,UACA,KAA3B,EAAKF,MAAMN,YACNS,MAAM,2BAGuB,IAAzB,EAAKH,MAAMI,UACX,EAAKJ,MAAME,UAAUG,KAAI,SAACC,EAAIC,GAC1B,GAAGD,IAAQ,EAAKN,MAAMQ,WACtB,CACI,IAAIT,EAAc,EAAKC,MAAMN,aAChB,IAATa,IACC,EAAKP,MAAME,UAAUK,GAAOR,EAC5B,EAAKN,SAAS,CACXS,UAAYD,EACZP,YAAc,GACdU,WAAU,KAItB,OAAOE,MAIXL,EAAaQ,KAAKV,GAClB,EAAKN,SAAS,CACVS,UAAYD,EACZP,YAAc,OA3Cf,EAiDnBgB,SAAW,SAACC,EAAIJ,GAId,EAAKd,SAAS,CACZC,YAAciB,EACdH,WAAWG,EACXP,WAAU,KAxDK,EA2DnBQ,WAAa,SAACL,GACV,IAAIM,EAAa,EAAKb,MAAME,UAC5BW,EAAWC,OAAOP,EAAI,GACtB,EAAKd,SAAS,CACdS,UAAYW,KA7DZ,EAAKb,MAAQ,CACTN,YAAc,GACdQ,UAAW,GACXM,WAAW,GACXJ,WAAU,GANC,E,0CAmEf,WACC,IAAD,OACI,OACI,gCACK,sBAAKW,UAAU,cAAf,UACD,yCACA,sBAAMA,UAAU,WAAWC,SAAUC,KAAKpB,QAA1C,SACI,uBAAOqB,KAAK,OAAOtB,MAAOqB,KAAKjB,MAAMN,YAAaqB,UAAU,eAAeI,YAAY,cAAcC,SAAUH,KAAK1B,oBAG5H,qBAAKwB,UAAU,cAAf,SACI,6BAEQE,KAAKjB,MAAME,UAAUG,KAAI,SAACM,EAAIJ,GAC1B,OACI,+BAAc,uBAAM,YAAWA,EAAjB,UAAuBI,EAAvB,OAAmC,mBAAGI,UAAU,cAAc,cAAY,OAAOM,QAAS,WAAK,EAAKX,SAASC,EAAIJ,MAA/H,IAA2I,mBAAGQ,UAAU,cAAc,cAAY,OAAOM,QAAS,WAAK,EAAKT,WAAWL,QAA9MA,iB,GAnFnBe,IAAMC,WCMbC,G,MAFH,kBAAK,cAAC,EAAD,MCAjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.68a7a2b2.chunk.js","sourcesContent":["import React from 'react';\r\nclass TodoApp extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        textContent : \"\",\r\n        listItems: [],\r\n        IsEditItem:\"\",\r\n        checkEdit:false,\r\n    };\r\n}\r\nhandleChange = (event) =>{\r\n    this.setState({\r\n        textContent : event.target.value,\r\n      })     \r\n}\r\naddItem = (event) =>{\r\n    event.preventDefault();\r\n    let currenttext = this.state.textContent;\r\n    let currentitems = this.state.listItems;\r\n    if(this.state.textContent === ''){\r\n            alert(\"Plesae Enter Item Name\")\r\n    }\r\n    else{\r\n             if(this.state.checkEdit === true){\r\n                this.state.listItems.map((elm,key)=>{\r\n                    if(elm === this.state.IsEditItem)\r\n                    {\r\n                        let currenttext = this.state.textContent\r\n                        if (key !== -1) {\r\n                             this.state.listItems[key] = currenttext;\r\n                             this.setState({\r\n                                listItems : currentitems,\r\n                                textContent : \"\",\r\n                                checkEdit:false,             \r\n                              })\r\n                        }\r\n                    }\r\n                    return elm;\r\n                })\r\n             }\r\n             else{\r\n                currentitems.push(currenttext);      \r\n                this.setState({\r\n                    listItems : currentitems,\r\n                    textContent : \"\",             \r\n                  })\r\n             } \r\n            }         \r\n    }\r\n\r\neditItem = (itm,key)=>{\r\n//   let editItem = this.state.listItems.find((elm)=>{\r\n//         return elm === itm;\r\n//   })\r\n  this.setState({\r\n    textContent : itm,\r\n    IsEditItem:itm,\r\n    checkEdit:true,\r\n  })\r\n}\r\nremoveItem = (key)=>{\r\n    let arrayitems = this.state.listItems;\r\n    arrayitems.splice(key,1);\r\n    this.setState({\r\n    listItems : arrayitems,\r\n       \r\n      })\r\n}\r\n    render() \r\n    {\r\n        return (\r\n            <div>\r\n                 <div className=\"Todoapp-Div\">\r\n                <h1>TodoApp</h1>\r\n                <form className=\"Inputdiv\" onSubmit={this.addItem}>\r\n                    <input type=\"text\" value={this.state.textContent} className=\"form-control\" placeholder=\"Enter Items\" onChange={this.handleChange}/>\r\n                </form>\r\n            </div> \r\n            <div className=\"TodoListDiv\">\r\n                <ul>                    \r\n                    {\r\n                        this.state.listItems.map((itm,key)=>{\r\n                            return(\r\n                                <li key={key}><span data-item={key}>{itm} </span><i className=\"fas fa-edit\" aria-hidden=\"true\" onClick={()=>{this.editItem(itm,key)}}></i> <i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={()=>{this.removeItem(key)}}></i></li>\r\n                            ) \r\n                        })\r\n                    }\r\n                </ul>\r\n                </div>\r\n            </div>          \r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoApp;","\nimport './App.css';\nimport TodoApp from './components/TodoApp';\nimport './components/TodoApp.css'\n\nconst App = ()=> <TodoApp />\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}